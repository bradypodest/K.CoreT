<?xml version="1.0"?>
<doc>
    <assembly>
        <name>K.Core.Model</name>
    </assembly>
    <members>
        <member name="P:K.Core.Model.TableInfoAttribute.TableName">
            <summary>
            真实表名(数据库表名，若没有填写默认实体为表名)
            </summary>
        </member>
        <member name="P:K.Core.Model.TableInfoAttribute.TableCnName">
            <summary>
            表中文名
            </summary>
        </member>
        <member name="P:K.Core.Model.TableInfoAttribute.DetailTable">
            <summary>
            子表
            </summary>
        </member>
        <member name="P:K.Core.Model.TableInfoAttribute.DetailTableCnName">
            <summary>
            子表中文名
            </summary>
        </member>
        <member name="P:K.Core.Model.TableInfoAttribute.DBServer">
            <summary>
            数据库
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendEntity.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendEntity.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendEntity.DeleteTime">
            <summary>
            删除时间
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendEntity.Deleter">
             <summary>
            删除人
             </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendEntity.DeleterID">
            <summary>
            删除人ID
            </summary>
        </member>
        <member name="F:K.Core.Model.StatusE.Live">
            <summary>
            存活
            </summary>
        </member>
        <member name="F:K.Core.Model.StatusE.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:K.Core.Model.StatusE.Ban">
            <summary>
            禁止  ，如用户
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendTwoEntity.CreateID">
            <summary>
            创建人ID
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendTwoEntity.Creator">
             <summary>
            创建人
             </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendTwoEntity.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendTwoEntity.ModifyID">
            <summary>
            修改人ID
            </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendTwoEntity.Modifier">
             <summary>
            修改人
             </summary>
        </member>
        <member name="P:K.Core.Model.BaseExtendTwoEntity.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.UserPwd">
             <summary>
            密码
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.RoleId">
             <summary>
            角色id
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.RoleName">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.LastLoginDate">
             <summary>
            最后登陆时间
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.LastModifyPwdDate">
             <summary>
            最后密码修改时间
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.ErrorCount">
             <summary>
            错误次数 
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.LastLoginFailDate">
             <summary>
            最后登陆失败时间
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.headPicUrl">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.Birth">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.Address">
             <summary>
            地址
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.Mobile">
             <summary>
            电话
             </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.SysUser.Remark">
             <summary>
            备注
             </summary>
        </member>
        <member name="M:K.Core.Model.Models.DBSeed.SeedAsync(K.Core.Model.Models.MyContext)">
            <summary>
            异步添加种子数据
            </summary>
            <param name="myContext"></param>
            <returns></returns>
        </member>
        <member name="P:K.Core.Model.Models.MyContext.ConnectionString">
            <summary>
            连接字符串 
            K.Core
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.MyContext.DbType">
            <summary>
            数据库类型 
            K.Core 
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.MyContext.Db">
            <summary>
            数据连接对象 
            K.Core 
            </summary>
        </member>
        <member name="P:K.Core.Model.Models.MyContext.Context">
            <summary>
            数据库上下文实例（自动关闭连接）
            K.Core 
            </summary>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.#ctor">
            <summary>
            功能描述:构造函数
            作　　者:K.Core
            </summary>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.GetEntityDB``1">
            <summary>
            功能描述:获取数据库处理对象
            作　　者:K.Core
            </summary>
            <returns>返回值</returns>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.GetEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取数据库处理对象
            作　　者:K.Core
            </summary>
            <param name="db">db</param>
            <returns>返回值</returns>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.CreateClassFileByDBTalbe(System.String)">
            <summary>
            功能描述:根据数据库表生产实体类
            作　　者:K.Core
            </summary>       
            <param name="strPath">实体类存放路径</param>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.CreateClassFileByDBTalbe(System.String,System.String)">
            <summary>
            功能描述:根据数据库表生产实体类
            作　　者:K.Core
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.CreateClassFileByDBTalbe(System.String,System.String,System.String[])">
            <summary>
            功能描述:根据数据库表生产实体类
            作　　者:K.Core
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.CreateClassFileByDBTalbe(System.String,System.String,System.String[],System.String,System.Boolean)">
            <summary>
            功能描述:根据数据库表生产实体类
            作　　者:K.Core
            </summary>
            <param name="strPath">实体类存放路径</param>
            <param name="strNameSpace">命名空间</param>
            <param name="lstTableNames">生产指定的表</param>
            <param name="strInterface">实现接口</param>
            <param name="blnSerializable">是否序列化</param>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.CreateTableByEntity``1(System.Boolean,``0[])">
            <summary>
            功能描述:根据实体类生成数据库表
            作　　者:K.Core
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.CreateTableByEntity(System.Boolean,System.Type[])">
            <summary>
            功能描述:根据实体类生成数据库表
            作　　者:K.Core
            </summary>
            <param name="blnBackupTable">是否备份表</param>
            <param name="lstEntitys">指定的实体</param>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.GetDbContext">
            <summary>
            功能描述:获得一个DbContext
            作　　者:K.Core
            </summary>
            <returns></returns>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.Init(System.String,SqlSugar.DbType)">
            <summary>
            功能描述:设置初始化参数
            作　　者:K.Core
            </summary>
            <param name="strConnectionString">连接字符串</param>
            <param name="enmDbType">数据库类型</param>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.GetConnectionConfig(System.Boolean,System.Boolean)">
            <summary>
            功能描述:创建一个链接配置
            作　　者:K.Core
            </summary>
            <param name="blnIsAutoCloseConnection">是否自动关闭连接</param>
            <param name="blnIsShardSameThread">是否夸类事务</param>
            <returns>ConnectionConfig</returns>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.GetCustomDB(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的DB
            作　　者:K.Core
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.GetCustomEntityDB``1(SqlSugar.SqlSugarClient)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            作　　者:K.Core
            </summary>
            <param name="sugarClient">sugarClient</param>
            <returns>返回值</returns>
        </member>
        <member name="M:K.Core.Model.Models.MyContext.GetCustomEntityDB``1(SqlSugar.ConnectionConfig)">
            <summary>
            功能描述:获取一个自定义的数据库处理对象
            作　　者:K.Core
            </summary>
            <param name="config">config</param>
            <returns>返回值</returns>
        </member>
        <member name="T:K.Core.Model.PageModel`1">
            <summary>
            通用分页信息类
            </summary>
        </member>
        <member name="P:K.Core.Model.PageModel`1.page">
            <summary>
            当前页标
            </summary>
        </member>
        <member name="P:K.Core.Model.PageModel`1.pageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:K.Core.Model.PageModel`1.dataCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:K.Core.Model.PageModel`1.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:K.Core.Model.PageModel`1.data">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="P:K.Core.Model.PageDataOptions.Page">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:K.Core.Model.PageDataOptions.Rows">
            <summary>
            多少 pagesize
            </summary>
        </member>
        <member name="P:K.Core.Model.PageDataOptions.Order">
            <summary>
            排序方式    格式如  "ID desc" 默认为 CreateTime desc
            </summary>
        </member>
        <member name="P:K.Core.Model.PageDataOptions.Wheres">
            <summary>
            条件 格式：   字段名称,条件（如 0,1,2）,值 | 字段名称,条件（如）,值
            关于条件 ，查看ExpressionType 枚举
            </summary>
        </member>
        <member name="P:K.Core.Model.PageDataOptions.IsAll">
            <summary>
            是否查询全部（包含删除的） ，默认不查询
            </summary>
        </member>
        <member name="F:K.Core.Model.ResponseEnum.NoPermissions">
            <summary>
            无权限
            </summary>
        </member>
        <member name="F:K.Core.Model.ResponseEnum.NoFound">
            <summary>
            找不到指定资源
            </summary>
        </member>
        <member name="F:K.Core.Model.ResponseEnum.ServerError">
            <summary>
            找不到指定资源
            </summary>
        </member>
        <member name="T:K.Core.Model.TableModel`1">
            <summary>
            表格数据，支持分页
            </summary>
        </member>
        <member name="P:K.Core.Model.TableModel`1.Code">
            <summary>
            返回编码
            </summary>
        </member>
        <member name="P:K.Core.Model.TableModel`1.Msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:K.Core.Model.TableModel`1.Count">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:K.Core.Model.TableModel`1.Data">
            <summary>
            返回数据集
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.UserPwd">
             <summary>
            密码
             </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.RoleId">
             <summary>
            角色id
             </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.RoleName">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.ErrorCount">
             <summary>
            错误次数 
             </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.headPicUrl">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.Birth">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.Address">
             <summary>
            地址
             </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.Mobile">
             <summary>
            电话
             </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:K.Core.Model.SysUserVM.Remark">
             <summary>
            备注
             </summary>
        </member>
    </members>
</doc>
